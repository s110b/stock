name: Deploy photo-stream to GitHub Pages

on:
  push:
    branches: [ late ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Pull docker image
        run: docker pull waschinski/photo-stream:latest

      - name: Run container and mirror site to _site
        shell: bash
        run: |
          set -euo pipefail

          IMAGE="waschinski/photo-stream:latest"

          # 尝试从镜像导出的端口里取第一个（例如 80/tcp），取到数字部分
          EXPOSED=$(docker image inspect --format='{{range $k,$v := .Config.ExposedPorts}}{{println $k}}{{end}}' "$IMAGE" || true)
          PORT=$(echo "$EXPOSED" | head -n1 | cut -d/ -f1)

          # 兜底端口
          if [ -z "${PORT:-}" ]; then
            PORT=80
          fi
          echo "Using container port: $PORT"

          # 启动容器，映射到 127.0.0.1:8080
          docker rm -f ps >/dev/null 2>&1 || true
          docker run -d --name ps -p 127.0.0.1:8080:${PORT} "$IMAGE"

          # 等待就绪（最多 60s）
          for i in $(seq 1 60); do
            if curl -fsS -m 2 http://127.0.0.1:8080/ >/dev/null; then
              echo "Service is up"
              break
            fi
            sleep 2
          done

          if ! curl -fsS -m 5 http://127.0.0.1:8080/ >/dev/null; then
            echo "Container did not become ready on :8080 (mapped from ${PORT})."
            echo "Container logs:"
            docker logs ps || true
            exit 1
          fi

          # 抓站
          rm -rf _site
          mkdir -p _site
          wget -r -np -k -E -p -nH --cut-dirs=0 -P _site http://127.0.0.1:8080/

          # 关闭容器
          docker rm -f ps >/dev/null 2>&1 || true

          # 如果 wget 生成了带主机名目录，拍平
          if [ -d "_site/127.0.0.1:8080" ]; then
            rsync -a _site/127.0.0.1:8080/ _site/
            rm -rf _site/127.0.0.1:8080
          fi

          # 简单校验
          if [ ! -e "_site/index.html" ]; then
            echo "_site/index.html not found. Listing _site:"
            ls -laR _site || true
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
